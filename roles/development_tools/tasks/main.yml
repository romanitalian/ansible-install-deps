---
- name: Install Go
  block:
    - name: Download Go
      get_url:
        url: "https://go.dev/dl/go{{ go_version }}.linux-amd64.tar.gz"
        dest: "/tmp/go.tar.gz"
      when: ansible_os_family == "Debian"

    - name: Extract Go
      unarchive:
        src: "/tmp/go.tar.gz"
        dest: "{{ go_install_path }}"
        remote_src: yes
      when: ansible_os_family == "Debian"

    - name: Set Go environment variables
      lineinfile:
        path: "{{ user_home }}/.zshrc"
        line: "{{ item }}"
        state: present
      loop:
        - 'export GOROOT={{ go_install_path }}/go'
        - 'export GOPATH={{ user_home }}/go'
        - 'export PATH=$PATH:$GOROOT/bin:$GOPATH/bin'
      when: ansible_os_family == "Debian"

    - name: Install Go tools
      shell: "{{ item }}"
      args:
        creates: "{{ user_home }}/go/bin/{{ item.split()[-1] }}"
      loop:
        - go install golang.org/x/tools/gopls@latest
        - go install mvdan.cc/gofumpt@latest
        - go install github.com/golangci/golangci-lint/cmd/golangci-lint@latest
      when: ansible_os_family == "Debian"

- name: Install PHP and extensions
  block:
    - name: Add PHP repository
      apt_repository:
        repo: ppa:ondrej/php
        state: present
        update_cache: yes
      when: ansible_os_family == "Debian"

    - name: Install PHP and extensions
      apt:
        name: "{{ php_extensions }}"
        state: present
        update_cache: yes
      when: ansible_os_family == "Debian"

    - name: Install Composer
      get_url:
        url: https://getcomposer.org/installer
        dest: /tmp/composer-setup.php
      when: ansible_os_family == "Debian"

    - name: Install Composer globally
      shell: php /tmp/composer-setup.php --install-dir=/usr/local/bin --filename=composer
      args:
        creates: /usr/local/bin/composer
      when: ansible_os_family == "Debian"

- name: Install Python and tools
  block:
    - name: Install Python and pip
      package:
        name: "{{ item }}"
        state: present
      loop:
        - python3
        - python3-pip
        - python3-venv
      when: ansible_os_family == "Debian"

    - name: Install virtualenv
      pip:
        name: virtualenv
        state: present
      when: ansible_os_family == "Debian"

- name: Install Protobuf
  block:
    - name: Install Protobuf compiler
      package:
        name: protobuf-compiler
        state: present
      when: ansible_os_family == "Debian"

    - name: Install Go protobuf plugin
      shell: go install google.golang.org/protobuf/cmd/protoc-gen-go@latest
      args:
        creates: "{{ user_home }}/go/bin/protoc-gen-go"
      when: ansible_os_family == "Debian"

- name: Install SQLite
  package:
    name: sqlite3
    state: present
  when: ansible_os_family == "Debian"

- name: Install development utilities
  package:
    name: "{{ item }}"
    state: present
  loop:
    - ripgrep
    - tig
    - tree
    - wget
    - vim
    - git
    - python3-pip
  when: ansible_os_family == "Debian"

- name: Install pre-commit
  pip:
    name: pre-commit
    state: present
  when: ansible_os_family == "Debian"

- name: Install yt-dlp
  pip:
    name: yt-dlp
    state: present
  when: ansible_os_family == "Debian" 